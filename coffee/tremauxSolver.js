// Generated by CoffeeScript 1.10.0
(function() {
  var Solver;

  Solver = function(walker) {
    this.walker = walker;
    this.direction = 0;
    this.end = walker.maze.end;
    return this;
  };

  Solver.prototype.step = function() {
    var startingDirection;
    startingDirection = this.direction;
    while (!this.walker.move(this.direction)) {
      this.direction++;
      if (this.direction > 3) {
        this.direction = 0;
      }
      if (this.direction === startingDirection) {
        while (!this.walker.move(this.direction, true)) {
          this.direction++;
          if (this.direction > 3) {
            this.direction = 0;
          }
        }
        break;
      }
    }
    return this.walker.draw();
  };

  Solver.prototype.isDone = function() {
    return this.walker.x === this.walker.maze.end.x && this.walker.y === this.walker.maze.end.y;
  };

  Solver.prototype.solve = function() {
    var i, ref, results, x, y;
    results = [];
    for (x = i = 0, ref = this.walker.maze.width - 1; 0 <= ref ? i <= ref : i >= ref; x = 0 <= ref ? ++i : --i) {
      results.push((function() {
        var j, ref1, results1;
        results1 = [];
        for (y = j = 0, ref1 = this.walker.maze.height - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; y = 0 <= ref1 ? ++j : --j) {
          if (this.walker.visited[x][y] === 1) {
            this.walker.context.fillStyle = Constant.SOLUTION_COLOR;
            results1.push(this.walker.context.fillRect(x * Constant.SQUARE, y * Constant.SQUARE, Constant.SQUARE, Constant.SQUARE));
          } else if (this.walker.visited[x][y] > 1) {
            this.walker.context.fillStyle = Constant.BACKTRACK_COLOR;
            results1.push(this.walker.context.fillRect(x * Constant.SQUARE, y * Constant.SQUARE, Constant.SQUARE, Constant.SQUARE));
          } else {
            results1.push(void 0);
          }
        }
        return results1;
      }).call(this));
    }
    return results;
  };

  this.window.Solver = Solver;

}).call(this);

//# sourceMappingURL=tremauxSolver.js.map
